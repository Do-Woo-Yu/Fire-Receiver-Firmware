dword Check_cnt = 0;

byte MODE_SW = 0, SET_SW = 0, DOWN_SW = 0, UP_SW = 0;
byte MODE_key_value_cnt = 0, UP_DOWN_key_value_cnt = 1, WHAT_MODE = 0; // WHAT_MODE가 0이면 홈화면, 1이면 MODE화면, 2이면 이벤트 보기 화면, 3이면 USB 다운로드 화면, 4이면 시간 조정 화면
byte DATE_TIME_ADJ = 0; // 시간 조정 MODE 변수
byte ADJ_YEAR = 0, ADJ_MONTH = 0, ADJ_DATE = 0, ADJ_HOUR = 0, ADJ_MINUTE = 0, ADJ_SEC = 0;
byte USB_Dis_Cnt = 0; // USB 다운로드 화면 커서 카운트
word BF_EVENT_Page  = 0; // 이벤트 페이지에 과거 값을 저장하여 다음 페이지나 전 페이지에 띄울값이 없다면 현재 페이지에 과거 페이지 값을 저장한다.
word Event_Page = 0;
unsigned int RESTART_HOME = 0; // 10초 동안 아무런 움직임이 없으면 다시 홈화면으로 이동한다.
unsigned int Download_Timer_1 = 0, Download_Timer_2 = 0; // USB 다운로드 과정 5초 딜레이

// 이벤트 보기 첫번째 텍스트( 이벤트, 날짜, 시간 ) 변수
int Text_Index_1 = 0;
char Event_Date_Time_1[20];
char Send_Event_Date_Time_1[50] = {0xEE, 0xB1, 0x10, 0x00, 0x02, 0x00, 0x03};
char Event_Text_1[50];
char Send_Event_Text_1[50] = {0xEE, 0xB1, 0x10, 0x00, 0x02, 0x00, 0x02};
int Event_Text_Length_1 = 0, Event_Date_Time_Length_1 = 0;

// 이벤트 보기 두번째 텍스트( 이벤트, 날짜, 시간 ) 변수
int Text_Index_2 = 0;
char Event_Date_Time_2[20];
char Send_Event_Date_Time_2[50] = {0xEE, 0xB1, 0x10, 0x00, 0x02, 0x00, 0x05};
char Event_Text_2[50];
char Send_Event_Text_2[50] = {0xEE, 0xB1, 0x10, 0x00, 0x02, 0x00, 0x04};
int Event_Text_Length_2 = 0, Event_Date_Time_Length_2 = 0;

// 이벤트 보기 세번째 텍스트( 이벤트, 날짜, 시간 ) 변수
int Text_Index_3 = 0;
char Event_Date_Time_3[20];
char Send_Event_Date_Time_3[50] = {0xEE, 0xB1, 0x10, 0x00, 0x02, 0x00, 0x07};
char Event_Text_3[50];
char Send_Event_Text_3[50] = {0xEE, 0xB1, 0x10, 0x00, 0x02, 0x00, 0x06};
int Event_Text_Length_3 = 0, Event_Date_Time_Length_3 = 0;

// 시스템 전압 십의 자리, 일의 자리, 소수점 1자리 추출
unsigned int SYSTEM_POWER_Vol;
byte SYSTEM_POWER_Vol_10,SYSTEM_POWER_Vol_1,SYSTEM_POWER_Vol_01;
// 예비전원 전압 십의 자리, 일의 자리, 소수점 1자리 추출
unsigned int STANDBY_POWER_Vol;
byte STANDBY_POWER_10,STANDBY_POWER_1,STANDBY_POWER_01;
// 시계전원 전압 일의 자리, 소수점 1자리 추출
unsigned int CLOCK_POWER_Vol;
byte CLOCK_POWER_10,CLOCK_POWER_1; 

/** 한글 텍스트 명령어 테스트 용 **/
unsigned char Korean_Data[28] = {0xEE, 0xB1, 0x10, 0x00, 0x00, 0x00, 0x02, 0xEC, 0x98, 0x88, 0xEB, 0xB9, 0x84, 0xEC, 0xA0, 0x84, 0xEC, 0x9B, 0x90, 0x20, 0x4F, 0x46, 0x46, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 한글 텍스트 명령어 테스트 용( 예비 전원 OFF )

/** 화면 전환 명령어 **/
unsigned char SCREEN0_GO[9] = {0xEE, 0xB1, 0x00, 0x00, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // SCREEN0으로 이동(홈 화면)
unsigned char SCREEN1_GO[9] = {0xEE, 0xB1, 0x00, 0x00, 0x01, 0xFF, 0xFC, 0xFF, 0xFF}; // SCREEN1으로 이동(MODE 화면)
unsigned char SCREEN2_GO[9] = {0xEE, 0xB1, 0x00, 0x00, 0x02, 0xFF, 0xFC, 0xFF, 0xFF}; // SCREEN2으로 이동(이벤트 보기 화면)
unsigned char SCREEN3_GO[9] = {0xEE, 0xB1, 0x00, 0x00, 0x03, 0xFF, 0xFC, 0xFF, 0xFF}; // SCREEN3으로 이동(USB 다운로드 화면)
unsigned char SCREEN4_GO[9] = {0xEE, 0xB1, 0x00, 0x00, 0x04, 0xFF, 0xFC, 0xFF, 0xFF}; // SCREEN4으로 이동(시간 조정 화면)

/** MODE에서 텍스트 색상 변경 명령어 **/
unsigned char MODE1_TEXT_RED[13] = {0xEE, 0xB1, 0x19, 0x00, 0x01, 0x00, 0x01, 0xF8, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // MODE 화면에서 이벤트 보기 텍스트 빨간색
unsigned char MODE1_TEXT_BLACK[13] = {0xEE, 0xB1, 0x19, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // MODE 화면에서 이벤트 보기 텍스트 검정색

unsigned char MODE2_TEXT_RED[13] = {0xEE, 0xB1, 0x19, 0x00, 0x01, 0x00, 0x02, 0xF8, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // MODE 화면에서 USB 다운로드 텍스트 빨간색
unsigned char MODE2_TEXT_BLACK[13] = {0xEE, 0xB1, 0x19, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // MODE 화면에서 USB 다운로드 텍스트 검정색

unsigned char MODE3_TEXT_RED[13] = {0xEE, 0xB1, 0x19, 0x00, 0x01, 0x00, 0x03, 0xF8, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // MODE 화면에서 시간 조정 텍스트 빨간색
unsigned char MODE3_TEXT_BLACK[13] = {0xEE, 0xB1, 0x19, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // MODE 화면에서 시간 조정 텍스트 검정색

/** 시간 조정 화면 에서 텍스트 색상 변경 명령어 **/
unsigned char DATE_YEAR_ADJ_TEXT_BLACK[13] = {0xEE, 0xB1, 0x19, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 달력의 년 텍스트 검정색
unsigned char DATE_YEAR_ADJ_TEXT_RED[13] = {0xEE, 0xB1, 0x19, 0x00, 0x04, 0x00, 0x01, 0xF8, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 달력의 년 텍스트 빨간색

unsigned char DATE_MONTH_ADJ_TEXT_BLACK[13] = {0xEE, 0xB1, 0x19, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 달력의 월 텍스트 검정색
unsigned char DATE_MONTH_ADJ_TEXT_RED[13] = {0xEE, 0xB1, 0x19, 0x00, 0x04, 0x00, 0x02, 0xF8, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 달력의 월 텍스트 빨간색

unsigned char DATE_DATE_ADJ_TEXT_BLACK[13] = {0xEE, 0xB1, 0x19, 0x00, 0x04, 0x00, 0x03, 0x00, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 달력의 일 텍스트 검정색
unsigned char DATE_DATE_ADJ_TEXT_RED[13] = {0xEE, 0xB1, 0x19, 0x00, 0x04, 0x00, 0x03, 0xF8, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 달력의 일 텍스트 빨간색

unsigned char TIME_HOUR_ADJ_TEXT_BLACK[13] = {0xEE, 0xB1, 0x19, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 시간의 시 텍스트 검정색
unsigned char TIME_HOUR_ADJ_TEXT_RED[13] = {0xEE, 0xB1, 0x19, 0x00, 0x04, 0x00, 0x04, 0xF8, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 시간의 시 텍스트 빨간색

unsigned char TIME_MINUTE_ADJ_TEXT_BLACK[13] = {0xEE, 0xB1, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 시간의 분 텍스트 검정색
unsigned char TIME_MINUTE_ADJ_TEXT_RED[13] = {0xEE, 0xB1, 0x19, 0x00, 0x04, 0x00, 0x05, 0xF8, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 시간의 분 텍스트 빨간색

unsigned char TIME_SEC_ADJ_TEXT_BLACK[13] = {0xEE, 0xB1, 0x19, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 시간의 초 텍스트 검정색
unsigned char TIME_SEC_ADJ_TEXT_RED[13] = {0xEE, 0xB1, 0x19, 0x00, 0x04, 0x00, 0x06, 0xF8, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 시간의 초 텍스트 빨간색

/** 시간 조정 화면 에서 날짜 및 시간 설정 명령어 **/
unsigned char YEAR_Data[15] = {0xEE, 0xB1, 0x10, 0x00, 0x04, 0x00, 0x01, 0x32, 0x30, 0x32, 0x34, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 날짜의 년도 표시
unsigned char MONTH_Data[13] = {0xEE, 0xB1, 0x10, 0x00, 0x04, 0x00, 0x02, 0x30, 0x32, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 날짜의 월 표시
unsigned char DATE_Data[13] = {0xEE, 0xB1, 0x10, 0x00, 0x04, 0x00, 0x03, 0x30, 0x32, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 날짜의 일 표시

unsigned char HOUR_Data[13] = {0xEE, 0xB1, 0x10, 0x00, 0x04, 0x00, 0x04, 0x30, 0x32, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 시간의 시 표시
unsigned char MINUTE_Data[13] = {0xEE, 0xB1, 0x10, 0x00, 0x04, 0x00, 0x05, 0x30, 0x32, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 시간의 분 표시
unsigned char SEC_Data[13] = {0xEE, 0xB1, 0x10, 0x00, 0x04, 0x00, 0x06, 0x30, 0x32, 0xFF, 0xFC, 0xFF, 0xFF}; // 시간 조정 화면에서 시간의 초 표시

/** USB 다운로드 화면에서 실행, 취소 텍스트 색상 변경 명령어 **/
unsigned char Execution_Text_Black[13] = {0xEE, 0xB1, 0x19, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // USB 다운로드 화면에서 실행 텍스트 검정색으로 변경
unsigned char Execution_Text_Red[13] = {0xEE, 0xB1, 0x19, 0x00, 0x03, 0x00, 0x01, 0xF8, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // USB 다운로드 화면에서 실행 텍스트 빨간색으로 변경

unsigned char Cancel_Text_Black[13] = {0xEE, 0xB1, 0x19, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // USB 다운로드 화면에서 취소 텍스트 검정색으로 변경
unsigned char Cancel_Text_Red[13] = {0xEE, 0xB1, 0x19, 0x00, 0x03, 0x00, 0x02, 0xF8, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // USB 다운로드 화면에서 취소 텍스트 빨간색으로 변경

/** USB 다운로드 화면에서 텍스트 명령어 **/
unsigned char Execution_Text_DisAppear[11] = {0xEE, 0xB1, 0x10, 0x00, 0x03, 0x00, 0x01, 0xFF, 0xFC, 0xFF, 0xFF}; // 다운로드 화면에서 1. 실행 텍스트 삭제
unsigned char Execution_Text_Appear[20] = {0xEE, 0xB1, 0x10, 0x00, 0x03, 0x00, 0x01, 0x31, 0x2E, 0x20, 0xEC, 0x8B, 0xA4, 0xED, 0x96, 0x89, 0xFF, 0xFC, 0xFF, 0xFF}; // 다운로드 화면에서 1. 실행 텍스트 출력

unsigned char Cancel_Text_DisAppear[11] = {0xEE, 0xB1, 0x10, 0x00, 0x03, 0x00, 0x02, 0xFF, 0xFC, 0xFF, 0xFF}; // 다운로드 화면에서 2. 취소 텍스트 삭제
unsigned char Cancel_Text_Appear[20] = {0xEE, 0xB1, 0x10, 0x00, 0x03, 0x00, 0x02, 0x32, 0x2E, 0x20, 0xEC, 0xB7, 0xA8, 0xEC, 0x86, 0x8C, 0xFF, 0xFC, 0xFF, 0xFF}; // 다운로드 화면에서 2. 취소 텍스트 출력

unsigned char Downloaddis3_Text_DisAppear[11] = {0xEE, 0xB1, 0x10, 0x00, 0x03, 0x00, 0x03, 0xFF, 0xFC, 0xFF, 0xFF}; // 다운로드 화면에서 3번 텍스트 삭제
unsigned char Downloaddis3_Text_Black[13] = {0xEE, 0xB1, 0x19, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 다운로드 화면에서 다운로드 완료 텍스트 검정색으로 변경

unsigned char Reset_Text_Appear[20] = {0xEE, 0xB1, 0x10, 0x00, 0x03, 0x00, 0x03, 0xEC, 0xB4, 0x88, 0xEA, 0xB8, 0xB0, 0xED, 0x99, 0x94, 0xFF, 0xFC, 0xFF, 0xFF}; // 다운로드 화면에서 초기화 텍스트 출력

unsigned char Download_Text_Appear[27] = {0xEE, 0xB1, 0x10, 0x00, 0x03, 0x00, 0x03, 0xEB, 0x8B, 0xA4, 0xEC, 0x9A, 0xB4, 0xEB, 0xA1, 0x9C, 0xEB, 0x93, 0x9C, 0x20, 0xEC, 0xA4, 0x91, 0xFF, 0xFC, 0xFF, 0xFF}; // 다운로드 화면에서 다운로드중 텍스트 출력

unsigned char Down_Success_Text_Appear[30] = {0xEE, 0xB1, 0x10, 0x00, 0x03, 0x00, 0x03, 0xEB, 0x8B, 0xA4, 0xEC, 0x9A, 0xB4, 0xEB, 0xA1, 0x9C, 0xEB, 0x93, 0x9C, 0x20, 0xEC, 0x99, 0x84, 0xEB, 0xA3, 0x8C, 0xFF, 0xFC, 0xFF, 0xFF}; // 다운로드 화면에서 다운로드 완료 텍스트 출력
unsigned char Down_Success_Text_Green[13] = {0xEE, 0xB1, 0x19, 0x00, 0x03, 0x00, 0x03, 0x04, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 다운로드 화면에서 다운로드 완료 텍스트 초록색으로 변경

unsigned char Down_Fail_Text_Appear[30] = {0xEE, 0xB1, 0x10, 0x00, 0x03, 0x00, 0x03, 0xEB, 0x8B, 0xA4, 0xEC, 0x9A, 0xB4, 0xEB, 0xA1, 0x9C, 0xEB, 0x93, 0x9C, 0x20, 0xEC, 0x8B, 0xA4, 0xED, 0x8C, 0xA8, 0xFF, 0xFC, 0xFF, 0xFF}; // 다운로드 화면에서 다운로드 실패 텍스트 출력
unsigned char Down_Fail_Text_Red[13] = {0xEE, 0xB1, 0x19, 0x00, 0x03, 0x00, 0x03, 0xF8, 0x00, 0xFF, 0xFC, 0xFF, 0xFF}; // 다운로드 화면에서 다운로드 실패 텍스트 빨간색으로 변경

/** 이벤트 보기 화면에서 텍스트 명령어 **/
unsigned char Send_Event_Text_1_Reset[11] = {0xEE, 0xB1, 0x10, 0x00, 0x02, 0x00, 0x02, 0xFF, 0xFC, 0xFF, 0xFF}; // 이벤트 화면에서 첫번째 이벤트 텍스트 초기화
unsigned char Send_Event_Date_Time_1_Reset[11] = {0xEE, 0xB1, 0x10, 0x00, 0x02, 0x00, 0x03, 0xFF, 0xFC, 0xFF, 0xFF}; // 이벤트 화면에서 첫번째 이벤트 날짜 시간 텍스트 초기화

unsigned char Send_Event_Text_2_Reset[11] = {0xEE, 0xB1, 0x10, 0x00, 0x02, 0x00, 0x04, 0xFF, 0xFC, 0xFF, 0xFF}; // 이벤트 화면에서 두번째 이벤트 텍스트 초기화
unsigned char Send_Event_Date_Time_2_Reset[11] = {0xEE, 0xB1, 0x10, 0x00, 0x02, 0x00, 0x05, 0xFF, 0xFC, 0xFF, 0xFF}; // 이벤트 화면에서 두번째 이벤트 날짜 시간 텍스트 초기화

unsigned char Send_Event_Text_3_Reset[11] = {0xEE, 0xB1, 0x10, 0x00, 0x02, 0x00, 0x06, 0xFF, 0xFC, 0xFF, 0xFF}; // 이벤트 화면에서 세번째 이벤트 텍스트 초기화
unsigned char Send_Event_Date_Time_3_Reset[11] = {0xEE, 0xB1, 0x10, 0x00, 0x02, 0x00, 0x07, 0xFF, 0xFC, 0xFF, 0xFF}; // 이벤트 화면에서 세번째 이벤트 날짜 시간 텍스트 초기화

unsigned char Send_Page[20] = {0xEE, 0xB1, 0x10, 0x00, 0x02, 0x00, 0x01, 0x5B, 0x30, 0x30, 0x31, 0x2F, 0x33, 0x33, 0x33, 0x5D, 0xFF, 0xFC, 0xFF, 0xFF}; // 이벤트 화면에서 페이지 수 데이터 전송
/** 날짜 및 시간 명령어( 1초 간격으로 전송 ) **/
unsigned char Date_Data[21] = {0xEE, 0xB1, 0x10, 0x00, 0x00, 0x00, 0x01, 0x32, 0x30, 0x32, 0x34, 0x2E, 0x31, 0x30, 0x2E, 0x31, 0x39, 0xFF, 0xFC, 0xFF, 0xFF}; // RTC 날짜 데이터를 LCD로 전송  2024.10.19
unsigned char Time_Data[19] = {0xEE, 0xB1, 0x10, 0x00, 0x00, 0x00, 0x02, 0x31, 0x39, 0x3A, 0x32, 0x38, 0x3A, 0x31, 0x32, 0xFF, 0xFC, 0xFF, 0xFF}; // RTC 시간 데이터를 LCD로 전송  19:28:12

/** 화재시 홈화면에서 화재 텍스트 출력 **/
unsigned char P_TYPE_RECIEVER_TEXT_Reset[11] = {0xEE, 0xB1, 0x10, 0x00, 0x00, 0x00, 0x06, 0xFF, 0xFC, 0xFF, 0xFF}; // 화재시 홈화면 P형 수신기 텍스트 초기화
unsigned char TEVA_TECH_TEXT_Reset[11] = {0xEE, 0xB1, 0x10, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFC, 0xFF, 0xFF}; // 화재시 홈화면 테바테크 텍스트 초기화
unsigned char FIRE_TEXT_Send[17] = {0xEE, 0xB1, 0x10, 0x00, 0x00, 0x00, 0x08, 0xED, 0x99, 0x94, 0xEC, 0x9E, 0xAC, 0xFF, 0xFC, 0xFF, 0xFF}; // 화재시 홈화면 화재 텍스트 출력

/** 복구시 홈화면에서 화재 텍스트 초기화 및 P형 수신기 텍스트 출력 및 테바테크 텍스트 출력 **/
unsigned char P_TYPE_RECIEVER_TEXT_Send[25] = {0xEE, 0xB1, 0x10, 0x00, 0x00, 0x00, 0x06, 0x50, 0xED, 0x98, 0x95, 0x20, 0xEC, 0x88, 0x98, 0xEC, 0x8B, 0xA0, 0xEA, 0xB8, 0xB0, 0xFF, 0xFC, 0xFF, 0xFF}; // 복구시 홈화면 P형 수신기 텍스트 출력
unsigned char TEVA_TECH_TEXT_Send[26] = {0xEE, 0xB1, 0x10, 0x00, 0x00, 0x00, 0x07, 0xEC, 0xB2, 0xAD, 0xEC, 0xA3, 0xBC, 0xEB, 0x8C, 0x80, 0xED, 0x95, 0x99, 0xEA, 0xB5, 0x90, 0xFF, 0xFC, 0xFF, 0xFF}; // 복구시 홈화면 테바테크 텍스트 출력
unsigned char FIRE_TEXT_Reset[11] = {0xEE, 0xB1, 0x10, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xFC, 0xFF, 0xFF}; // 복구시 홈화면 화재 텍스트 초기화

/** 홈화면이나 MODE 화면에서 시스템 전압, 예비전원 전압, 시계전원 전압을 1초마다 전송한다. **/
unsigned char SYSTEM_Vol_0[16] = {0xEE, 0xB1, 0x10, 0x00, 0x00, 0x00, 0x03, 0x32, 0x34, 0x2E, 0x32, 0x56, 0xFF, 0xFC, 0xFF, 0xFF}; // 홈 화면에서 시스템 전압
unsigned char STANDBY_POWER_Vol_0[16] = {0xEE, 0xB1, 0x10, 0x00, 0x00, 0x00, 0x04, 0x32, 0x34, 0x2E, 0x32, 0x56, 0xFF, 0xFC, 0xFF, 0xFF}; // 홈 화면에서 예비전원 전압
unsigned char CLOCK_POWER_Vol_0[15] = {0xEE, 0xB1, 0x10, 0x00, 0x00, 0x00, 0x05, 0x34, 0x2E, 0x32, 0x56, 0xFF, 0xFC, 0xFF, 0xFF}; // 홈 화면에서 시계전원 전압

unsigned char SYSTEM_Vol_1[16] = {0xEE, 0xB1, 0x10, 0x00, 0x01, 0x00, 0x04, 0x32, 0x34, 0x2E, 0x32, 0x56, 0xFF, 0xFC, 0xFF, 0xFF}; // MODE 화면에서 시스템 전압
unsigned char STANDBY_POWER_Vol_1[16] = {0xEE, 0xB1, 0x10, 0x00, 0x01, 0x00, 0x05, 0x32, 0x34, 0x2E, 0x32, 0x56, 0xFF, 0xFC, 0xFF, 0xFF}; // MODE 화면에서 예비전원 전압
unsigned char CLOCK_POWER_Vol_1[15] = {0xEE, 0xB1, 0x10, 0x00, 0x01, 0x00, 0x06, 0x34, 0x2E, 0x32, 0x56, 0xFF, 0xFC, 0xFF, 0xFF}; // MODE 화면에서 시계전원 전압

unsigned char test_re_1[250];